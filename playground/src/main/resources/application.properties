# These are the default data soruce for a spring app with only one database.
spring.datasource.url=jdbc:postgresql://localhost/spring-sample
spring.datasource.username=postgres
spring.datasource.password=optasports
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1


spring.jpa.generate-ddl=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Show or not log for each sql query
spring.jpa.show-sql=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Configure the port the app should run on
# server.port=9000
# The port on which we can access /health url for the app (spring boot actuator required)
# management.port=9090

#
# JCache configuration (example with ehcache 3).
#

spring.cache.jcache.config=classpath:ehcache3.xml

# Email configuration
# To avoid exceptions and always sending the email when the app start, we added this property.
spring.mail.mock=true
spring.mail.host=smtp.gmail.com
# SMTP server port
spring.mail.port=465
# Login used for authentication
spring.mail.username=sender@domain.com
# Password for the given login
spring.mail.password=password
spring.mail.protocol=smtp
# This is needed to be able to send emails using google smtp server
spring.mail.properties.mail.smtp.ssl.enable = true
# Default message encoding UTF-8
# spring.mail.defaultEncoding=UTF-8

# Cronjob/Schedule configuration
# Disable or enable cronjob
application.schedule.active=true
# Every 30 seconds
application.schedule.cron="*/30 * * * * *"

# This configuration stopes your batch job to run when you start the app.
spring.batch.job.enabled=false